{"version":3,"sources":["app.js","controllers/habitsCtrl.js","controllers/mainCtrl.js","services/mainService.js","directives/templates/footerDir.js","directives/templates/sidebarDir.js","directives/templates/topNavDir.js","directives/habits/editHabitModal.js","directives/habits/habitCreatorDir.js","directives/habits/newHabitModal.js","directives/widgets/colorPicker.js","directives/widgets/eliteLoader.js","directives/widgets/timePicker.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["\"use strict\";\n\nangular.module('app', ['ui.router', 'ngAnimate']).config(function ($stateProvider, $urlRouterProvider) {\n  $stateProvider.state('home', {\n    url: '/',\n    templateUrl: '../views/login.html'\n  }).state('me/overview', {\n    url: '/me/overview',\n    templateUrl: '../views/me_overview.html' // resolve:{\n    //     authenticate: function(userService){\n    //         // check to see if authenticated\n    //     }\n    // }\n\n  }).state('me/habits', {\n    url: '/me/habits',\n    templateUrl: '../views/me_habits.html' // controller: 'habitsCtrl'\n\n  });\n  console.log($urlRouterProvider);\n  $urlRouterProvider.otherwise('/');\n});\n/* particlesJS.load(@dom-id, @path-json, @callback (optional)); */\n// particlesJS.load('particles-js', 'assets/particles.json', function() {\n// console.log('callback - particles.js config loaded');\n// });","\"use strict\";\n\nangular.module('app').controller('habitsCtrl', function ($scope, mainService) {\n  $scope.test = mainService.test;\n});","\"use strict\";\n\nangular.module('app').controller('mainCtrl', function ($scope, mainService, $location, $timeout) {\n  $scope.test = mainService.test;\n  var value = false;\n  $scope.showLoader = value;\n  console.log($location);\n  $scope.location = $location.$$url; // mainService.getUser().then(function(response){\n  // \t$scope.user = response;\n  // \tconsole.log($scope.user);\n  // })\n  //get All Habits\n\n  $scope.getHabits = function () {\n    $timeout(function () {\n      mainService.getHabits().then(function (habits) {\n        $scope.habits = habits;\n        console.log(\"After getHabits() comes back\", $scope.habits);\n      });\n    }, 0);\n  };\n\n  $scope.getHabits(); //Add new habit\n\n  $scope.newHabit = function (newhabit, newHabitFrequency) {\n    $scope.showLoader = !value;\n    $timeout(function () {\n      console.log(\"Habit Creation Form-data before sent to service\", newhabit);\n      mainService.newHabit(newhabit, newHabitFrequency).then(function (response) {\n        console.log(response.data); // $scope.habits.push(response.data.slice(0, 1));\n\n        $scope.getHabits();\n        $scope.showLoader = value;\n        swal({\n          title: 'Habit Commited!',\n          text: 'Don\\'t screw it up, bub!',\n          type: 'success',\n          confirmButtonText: 'Yes, master'\n        });\n      });\n    }, 2000);\n  }; //Edit a Habit\n\n\n  $scope.editHabit = function (editedhabit, editFrequency) {\n    $scope.showLoader = !value;\n    $timeout(function () {\n      console.log(\"Edited Form-data before sent to service\", editedhabit, editFrequency);\n      mainService.editHabit(editedhabit, editFrequency).then(function (response) {\n        $scope.getHabits();\n        $scope.showLoader = value;\n        swal({\n          title: 'Changes Saved!',\n          type: 'success',\n          confirmButtonText: 'Nice'\n        });\n      });\n    }, 2000);\n  }; //Delete a Habit\n\n\n  $scope.deleteHabit = function (habitId) {\n    $timeout(function () {\n      console.log(\"Deleted Habit Form-data before sent to service\", habitId);\n      mainService.deleteHabit(habitId).then(function (response) {\n        $scope.getHabits();\n      });\n    }, 150);\n  }; //Pulls up modal to verify user's intent to delete habit.\n\n\n  $scope.deleteVerify = function (deletedHabit) {\n    swal({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, cancel!',\n      confirmButtonClass: 'btn btn-success',\n      cancelButtonClass: 'btn btn-danger',\n      buttonsStyling: false\n    }).then(function () {\n      $scope.deleteHabit(deletedHabit);\n      swal({\n        title: 'Habit Deleted!',\n        type: 'success',\n        confirmButtonText: 'Phew!'\n      });\n    }, function (dismiss) {\n      // dismiss can be 'cancel', 'overlay',\n      // 'close', and 'timer'\n      if (dismiss === 'cancel') {\n        swal('Cancelled', 'Your habit is safe :)', 'error');\n      }\n    });\n  }; //Populate edit Modal with selected Habit's data\n\n\n  $scope.editModal = function (habit) {\n    $scope.editedHabit = {};\n    $scope.editFrequency = {}; //Split to Habit Table attributes\n\n    $scope.editedHabit.title = habit.title;\n    $scope.editedHabit.reminder_time = habit.reminder_time;\n    $scope.editedHabit.color = habit.color;\n    $scope.editedHabit.date_created = habit.date_created;\n    $scope.editedHabit.time_created = habit.time_created;\n    $scope.editedHabit.currentstreak = habit.currentstreak;\n    $scope.editedHabit.id = habit.id; //Split to Frequency Table attributes\n\n    $scope.editFrequency.monday = habit.monday;\n    $scope.editFrequency.tuesday = habit.tuesday;\n    $scope.editFrequency.wednesday = habit.wednesday;\n    $scope.editFrequency.thursday = habit.thursday;\n    $scope.editFrequency.friday = habit.friday;\n    $scope.editFrequency.saturday = habit.saturday;\n    $scope.editFrequency.sunday = habit.sunday;\n    $scope.editFrequency.habit_id = habit.habit_id;\n  };\n\n  $scope.checkIn = function (currentStreak) {\n    $scope.editedHabit.currentstreak = currentStreak;\n    $scope.editedHabit.currentstreak++;\n  };\n});","\"use strict\";\n\nangular.module('app').service('mainService', function ($http) {\n  var self = this; // *****************************\n\n  this.test = \"Controller & Service are working\";\n  this.reminderTime = \"8:00 PM\";\n  this.selectedColor = \"blue\";\n  this.date = new Date(); // *****************************\n\n  this.getHabits = function () {\n    return $http({\n      method: 'GET',\n      url: '/api/getHabits'\n    }).then(function (response) {\n      // console.log(response.data);\n      return response.data;\n    });\n  };\n\n  this.newHabit = function (newHabit, newHabitFrequency) {\n    newHabit.color = this.selectedColor;\n    newHabit.reminder_time = this.reminderTime;\n    newHabit.date_created = this.date.toLocaleDateString();\n    newHabit.time_created = this.date.toLocaleTimeString(); // console.log(newHabit, newHabitFrequency);\n\n    return $http({\n      method: 'POST',\n      url: '/api/createHabit',\n      data: {\n        newHabit: newHabit,\n        newHabitFrequency: newHabitFrequency\n      }\n    }).then(function (response) {\n      // console.log(response);\n      // self.getHabits();\n      return response;\n    });\n  };\n\n  this.editHabit = function (editedHabit, editFrequency) {\n    console.log(editedHabit, editFrequency);\n    return $http({\n      method: 'PUT',\n      url: '/api/editHabit',\n      data: {\n        editedHabit: editedHabit,\n        editFrequency: editFrequency\n      }\n    }).then(function (response) {\n      return response;\n    });\n  };\n\n  this.deleteHabit = function (id) {\n    // console.log(deletedHabit);\n    return $http({\n      method: 'DELETE',\n      url: '/api/deleteHabit/' + id\n    }).then(function (response) {\n      return response;\n    });\n  }; // this.getUser = function(){\n  //     return $http({\n  //         method: 'GET',\n  //         url: '/auth/me'\n  //     }).then(function(response){\n  //         console.log(response);\n  //         return response.data;\n  //     })\n  // }\n\n});","\"use strict\";\n\nangular.module('app').directive('footerDir', function () {\n  return {\n    restrict: 'E',\n    templateUrl: './views/directives/templates/footerDir.html'\n  };\n});","\"use strict\";\n\nangular.module('app').directive('sidebarDir', function () {\n  return {\n    restrict: 'E',\n    templateUrl: './views/directives/templates/sidebarDir.html'\n  };\n});","\"use strict\";\n\nangular.module('app').directive('topNavDir', function () {\n  return {\n    restrict: 'E',\n    templateUrl: './views/directives/templates/topNavDir.html'\n  };\n});","\"use strict\";\n\nangular.module('app').directive('editHabitModal', function () {\n  return {\n    restrict: \"AE\",\n    templateUrl: '../views/directives/habits/editHabitModal.html'\n  };\n});","\"use strict\";\n\nangular.module('app').directive('habitCreatorDir', function () {\n  return {\n    restrict: 'E',\n    templateUrl: './views/directives/habits/habitCreatorDir.html',\n    link: function link(scope, elem, attrs) {// if (document.getElementById('.progress-bar').style.width == \"100%\"){\n      //     $('#habitProgress').addClass('neonGlow')\n      // }\n    }\n  };\n});","\"use strict\";\n\nangular.module('app').directive('newHabitModal', function () {\n  return {\n    restrict: \"AE\",\n    templateUrl: '../views/directives/habits/newHabitModal.html'\n  };\n});","\"use strict\";\n\nangular.module('app').directive('colorPicker', function (mainService) {\n  return {\n    restrict: 'AE',\n    templateUrl: './views/directives/widgets/colorPicker.html',\n    scope: {\n      colorValue: \"=\"\n    },\n    link: function link(scope, elem, attrs) {\n      scope.colorSelect = function (color) {\n        //assigns data value of selected color to variable in mainService\n        mainService.selectedColor = color; // mainService.editedColor = color;\n        // Remove class from currently active button\n\n        $(\".color-choices > li\").removeClass(\"active-color\"); // Add class active to clicked button\n\n        $(this).addClass(\"active-color\"); // Get background color of clicked\n\n        scope.colorValue = color;\n      };\n    }\n  };\n});","\"use strict\";\n\nangular.module('app').directive('eliteLoader', function () {\n  return {\n    restrict: 'E',\n    templateUrl: './views/directives/widgets/eliteLoader.html'\n  };\n});","\"use strict\";\n\nangular.module('app').directive('timePicker', function (mainService) {\n  return {\n    restrict: 'AE',\n    templateUrl: './views/directives/widgets/timePicker.html',\n    scope: {\n      timePickerTitle: '@',\n      reminderTime: '='\n    },\n    link: function link(scope, elem, attrs) {\n      $(\"#commit\").on('click', function () {\n        // mainService.reminderTime = scope.reminderTime;\n        mainService.reminderTime = $('#reminder_time').val(); // console.log(mainService.reminderTime)\n      });\n      $(\"#save\").on('click', function () {\n        // mainService.reminderTime = scope.reminderTime;\n        mainService.reminderTime = $('#reminder_time').val(); // console.log(mainService.reminderTime)\n      });\n      $('.timepicker').datetimepicker({\n        //          format: 'H:mm',    // use this format if you want the 24hours timepicker\n        format: 'h:mm A',\n        //use this format if you want the 12hours timpiecker with AM/PM toggle\n        icons: {\n          time: \"fa fa-clock-o\",\n          date: \"fa fa-calendar\",\n          up: \"fa fa-chevron-up\",\n          down: \"fa fa-chevron-down\",\n          previous: 'fa fa-chevron-left',\n          next: 'fa fa-chevron-right',\n          today: 'fa fa-screenshot',\n          clear: 'fa fa-trash',\n          close: 'fa fa-remove',\n          inline: true\n        }\n      });\n    },\n    controller: function controller($scope, mainService, $interval) {}\n  };\n});"]}